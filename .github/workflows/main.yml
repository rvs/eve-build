name: EVE
on:
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Test
        run: |
          make test
      - name: Report test results as Annotations
        if: ${{ always() }}
        uses: guyarb/golang-test-annoations@v0.1
        with:
          test-results: dist/amd64/results.json
      - name: Store raw test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: 'test-report'
          path: ${{ github.workspace }}/dist

  yetus:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: src
          fetch-depth: 0

      - name: Yetus
        uses: apache/yetus-test-patch-action@main
        with: 
          basedir: ./src
          patchdir: ./out
          buildtool: nobuild
          continuousimprovement: true

      - name: Store Yetus artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: apacheyetuspatchdir
          path: ${{ github.workspace }}/out

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build packages
        run: |
          make pkgs
      - name: Build EVE
        run: |
          make eve
      - name: Build KVM rootfs
        run: |
          make HV=kvm rootfs
      - name: Store rootfs
        uses: actions/upload-artifact@v2
        with:
          name: rootfs
          path: ${{ github.workspace }}/dist/*/installer/rootfs-*.squash
      - name: Run Eden
        run: |
          sudo apt update
          sudo apt install -y qemu-utils
          make HV=kvm eve
          evebuildname=$(find ./dist/amd64 | grep kvm-amd64 | grep -o '0.*-kvm-amd64')
          eve_tag=${evebuildname%-kvm-amd64}
          rm -rf ./eden
          git clone https://github.com/lf-edge/eden.git
          cd ./eden
          make clean
          make build
          ./eden config add default
          ./eden config set default --key eve.tag --value=$eve_tag
          ./eden config set default --key=eve.accel --value=false
          make build-tests
          ./eden test ./tests/workflow

# If all else fails, you may find solace here
#  https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions
#  https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows
#
#  echo "::error file=${file},line=${linenum},col=${column}::${plugin}:${text}"
#  echo "::error file=${file},line=${linenum}::${plugin}:${text}"
#
#  dump:
#      runs-on: ubuntu-latest
#      steps:
#        - name: Dump GitHub context
#          env:
#            GITHUB_CONTEXT: ${{ toJson(github) }}
#          run: |
#            echo "$GITHUB_CONTEXT"
#            echo ${{ github.event.pull_request.title }}
